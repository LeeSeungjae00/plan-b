[{"/Users/iseungjae/Desktop/baseline_project/src/index.js":"1","/Users/iseungjae/Desktop/baseline_project/src/Module/madeAPIData.jsx":"2","/Users/iseungjae/Desktop/baseline_project/src/Content/RadioComponent.jsx":"3","/Users/iseungjae/Desktop/baseline_project/src/Content/ResultTable.jsx":"4","/Users/iseungjae/Desktop/baseline_project/src/App.js":"5","/Users/iseungjae/Desktop/baseline_project/src/Content/Header/Header.jsx":"6","/Users/iseungjae/Desktop/baseline_project/src/Content/InputComponent.jsx":"7"},{"size":696,"mtime":1611661142572,"results":"8","hashOfConfig":"9"},{"size":1258,"mtime":1611837473555,"results":"10","hashOfConfig":"9"},{"size":1084,"mtime":1611837473555,"results":"11","hashOfConfig":"9"},{"size":2656,"mtime":1611839085527,"results":"12","hashOfConfig":"9"},{"size":9358,"mtime":1611838740396,"results":"13","hashOfConfig":"9"},{"size":347,"mtime":1611837473554,"results":"14","hashOfConfig":"9"},{"size":889,"mtime":1611837473554,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"8cboga",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/iseungjae/Desktop/baseline_project/src/index.js",[],"/Users/iseungjae/Desktop/baseline_project/src/Module/madeAPIData.jsx",[],"/Users/iseungjae/Desktop/baseline_project/src/Content/RadioComponent.jsx",[],"/Users/iseungjae/Desktop/baseline_project/src/Content/ResultTable.jsx",[],"/Users/iseungjae/Desktop/baseline_project/src/App.js",["31"],"import React, { useState } from 'react';\r\nimport './App.css'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { AppBar, Tabs, Grow } from '@material-ui/core';\r\nimport { ArrowRight } from '@material-ui/icons';\r\nimport { TabPanel, a11yProps, LinkTab } from './Content/tapModule';\r\nimport InputComponent from './Content/InputComponent';\r\nimport RadioComponent from './Content/RadioComponent';\r\nimport ResultTable from './Content/ResultTable';\r\nimport madeAPIData, { baselibeRowNames, DNA_suppressionRowNames } from './Module/madeAPIData';\r\nimport axios from 'axios';\r\nimport Header from './Content/Header/Header'\r\n\r\n\r\nconst result = {};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.background.paper,\r\n    boxShadow: \"1px 1px 6px 0px\",\r\n    borderRadius: \"10px\"\r\n  },\r\n  header: {\r\n    borderRadius: \"10px 10px 0px 0px\",\r\n\r\n  },\r\n}));\r\n\r\nfunction createData(name, val1, val2, val3) {\r\n  return { name, val1, val2, val3 };\r\n}\r\n\r\nexport default function App() {\r\n  const classes = useStyles();\r\n  const [tabValue, setTapValue] = useState(0);\r\n  const [tableVisible, setTableVisible] = useState(false);\r\n  const [rows, setRows] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n\r\n  const handleTabChange = (event, newValue) => {\r\n    setTableVisible(false);\r\n    setTapValue(newValue);\r\n  };\r\n\r\n\r\n  const handleSend = async () => {\r\n    try {\r\n      const restAPIData = madeAPIData(tabValue, result);\r\n      setLoading(true);\r\n      if (restAPIData === 0) { setLoading(false); return; }\r\n      const loadTest = await new Promise((res) => setTimeout(() => {res(\"test\")}, 1000));\r\n      const req = await axios.post(\"/data\", restAPIData);\r\n\r\n      //rows 설정 \r\n      let rowsNamePicker;\r\n\r\n      if (tabValue === 0) rowsNamePicker = baselibeRowNames;\r\n      else if (tabValue === 0) rowsNamePicker = DNA_suppressionRowNames;\r\n\r\n      rows.splice(0);\r\n\r\n      for (let i = 0; i < rowsNamePicker.length; i++) {\r\n        rows.push(createData(rowsNamePicker[i], ...req.data[`group_${i + 1}`]));\r\n      }\r\n\r\n      setRows(rows);\r\n      setLoading(false);\r\n\r\n      if (tableVisible === false) setTableVisible(true);\r\n    }\r\n    catch (e) {\r\n      //------test code--------//\r\n      const fakeReq = {\r\n        group_1: [\"0.0%\", \"0.0%\", \"0.0%\"],\r\n        group_2: [\"0.0%\", \"0.0%\", \"0.0%\"],\r\n        group_3: [\"0.0%\", \"0.0%\", \"0.0%\"],\r\n        group_4: [\"0.0%\", \"0.0%\", \"0.0%\"],\r\n        group_5: [\"0.0%\", \"0.0%\", \"0.0%\"],\r\n      }\r\n      let rowsNamePicker;\r\n      if (tabValue === 0) rowsNamePicker = baselibeRowNames;\r\n      else if (tabValue === 1) rowsNamePicker = DNA_suppressionRowNames;\r\n      rows.splice(0);\r\n      for (let i = 0; i < rowsNamePicker.length; i++) {\r\n        rows.push(createData(rowsNamePicker[i], ...fakeReq[`group_${i + 1}`]));\r\n      }\r\n      setRows(rows);\r\n\r\n      setLoading(false);\r\n      if (tableVisible === false) setTableVisible(true);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Header title=\"Hepatocellular carcinoma prediction in Chronic hepatitis B\r\n      Machine learning based prediction \"></Header>\r\n      <div className=\"App\">\r\n        <div className=\"tab-rapper\">\r\n          <div className={classes.root}>\r\n            <AppBar className={classes.header} position=\"static\">\r\n              <Tabs\r\n                variant=\"fullWidth\"\r\n                value={tabValue}\r\n                onChange={handleTabChange}\r\n                aria-label=\"nav tabs example\"\r\n              >\r\n                <LinkTab label=\"Data from baseline (antivirals initiation)\" href=\"/antiviralsinitiation\" {...a11yProps(0)} />\r\n                <LinkTab label=\"Data from baseline and HBV DNA suppression (<2,000IU/ml)\" href=\"/HBVDNAsuppression\" {...a11yProps(1)} />\r\n              </Tabs>\r\n            </AppBar>\r\n\r\n            <TabPanel loading={loading} onSend={handleSend} value={tabValue} index={0}\r\n              children_1={\r\n                <>\r\n                  <InputComponent\r\n                    type=\"number\"\r\n                    min=\"0\"\r\n                    lable=\"Age\"\r\n                    adornment=\"Years\"\r\n                    setInputVal={age => result.age = age}\r\n                  ></InputComponent>\r\n                  <RadioComponent\r\n                    title=\"Sex\"\r\n                    lable1=\"male\"\r\n                    lable2=\"female\"\r\n                    setRadioVal={sex => result.sex = sex}\r\n                  ></RadioComponent>\r\n                  <InputComponent\r\n                    type=\"number\"\r\n                    lable=\"Platelet, baseline\"\r\n                    adornment={<>x1000mm<sup className=\"mutip\">3</sup></>}\r\n                    setInputVal={platelet => result.platelet = platelet}\r\n                  ></InputComponent>\r\n                  <RadioComponent\r\n                    title=\"Antivirals agent\"\r\n                    lable1=\"entecavir\"\r\n                    lable2=\"tenofovir\"\r\n                    setRadioVal={antivirals => result.antivirals = antivirals}\r\n                  ></RadioComponent>\r\n                  <InputComponent\r\n                    type=\"number\"\r\n                    lable=\"Albumin, baseline\"\r\n                    adornment=\"g/dL\"\r\n                    setInputVal={albumin => result.albumin = albumin}\r\n                  ></InputComponent>\r\n                  <RadioComponent\r\n                    title=\"Cirrhosis, baseline\"\r\n                    lable1=\"yes\"\r\n                    lable2=\"no\"\r\n                    setRadioVal={cirrhosis => result.cirrhosis = cirrhosis}\r\n                  ></RadioComponent>\r\n                  <InputComponent\r\n                    type=\"number\"\r\n                    lable=\"Total bilirubin, baseline\"\r\n                    adornment=\"mg/dL\"\r\n                    setInputVal={total_bilirubin => result.total_bilirubin = total_bilirubin}\r\n                  ></InputComponent>\r\n                  <RadioComponent\r\n                    title=\"Presence of HBeAg, baseline\"\r\n                    lable1=\"yes\"\r\n                    lable2=\"no\"\r\n                    setRadioVal={presence_of_HBeAg => result.presence_of_HBeAg = presence_of_HBeAg}\r\n                  ></RadioComponent>\r\n                  <InputComponent\r\n                    type=\"number\"\r\n                    lable=\"ALT, baseline\"\r\n                    adornment=\"U/L\"\r\n                    setInputVal={ALT => result.ALT = ALT}\r\n                  ></InputComponent>\r\n                  <InputComponent\r\n                    type=\"number\"\r\n                    lable=\"HBV DNA, baseline\"\r\n                    adornment=\"IU/mL\"\r\n                    setInputVal={HBV_DNA => result.HBV_DNA = HBV_DNA}\r\n                  ></InputComponent>\r\n                </>\r\n              }\r\n              children_2={\r\n                <>\r\n                  <InputComponent\r\n                    type=\"number\"\r\n                    lable=\"Platelet, DNA suppression\"\r\n                    adornment={<>x1000mm<sup className=\"mutip\">3</sup></>}\r\n                    setInputVal={platelet_dna => result.platelet_dna = platelet_dna}\r\n                  ></InputComponent>\r\n                  <RadioComponent\r\n                    title=\"Cirrhosis, DNA suppression\"\r\n                    lable1=\"yes\"\r\n                    lable2=\"no\"\r\n                    setRadioVal={cirrhosis_dna => result.cirrhosis_dna = cirrhosis_dna}\r\n                  ></RadioComponent>\r\n                  <InputComponent\r\n                    type=\"number\"\r\n                    lable=\"Albumin, DNA suppression\"\r\n                    adornment=\"g/dL\"\r\n                    setInputVal={albumin_dna => result.albumin_dna = albumin_dna}\r\n                  ></InputComponent>\r\n                  <InputComponent\r\n                    type=\"number\"\r\n                    lable=\"Total bilirubin, DNA suppression\"\r\n                    adornment=\"mg/dL\"\r\n                    setInputVal={total_bilirubin_dna => result.total_bilirubin_dna = total_bilirubin_dna}\r\n                  ></InputComponent>\r\n                  <InputComponent\r\n                    type=\"number\"\r\n                    lable=\"ALT, DNA suppression\"\r\n                    adornment=\"U/L\"\r\n                    setInputVal={ATL_dna => result.ATL_dna = ATL_dna}\r\n                  ></InputComponent>\r\n                  <InputComponent\r\n                    type=\"number\"\r\n                    lable=\"HBV DNA, DNA suppression\"\r\n                    adornment=\"IU/mL\"\r\n                    setInputVal={HBV_dna_dna => result.HBV_dna_dna = HBV_dna_dna}\r\n                  ></InputComponent>\r\n                  <RadioComponent\r\n                    title=\"Presence of HBeAg, DNA suppression\"\r\n                    lable1=\"yes\"\r\n                    lable2=\"no\"\r\n                    setRadioVal={presence_of_HBeAg_dna => result.presence_of_HBeAg_dna = presence_of_HBeAg_dna}\r\n                  ></RadioComponent>\r\n                </>\r\n              }\r\n            >\r\n            </TabPanel>\r\n          </div>\r\n        </div>\r\n        {tableVisible ?\r\n          <>\r\n            <Grow timeout={1000} in={tableVisible}>\r\n              <ArrowRight fontSize=\"large\"></ArrowRight>\r\n            </Grow>\r\n            <Grow timeout={1500} in={tableVisible}>\r\n              <div><ResultTable loading = {loading} rows={rows}></ResultTable></div>\r\n            </Grow>\r\n          </> :\r\n          null\r\n        }\r\n      </div>\r\n    </>\r\n  );\r\n}","/Users/iseungjae/Desktop/baseline_project/src/Content/Header/Header.jsx",[],"/Users/iseungjae/Desktop/baseline_project/src/Content/InputComponent.jsx",[],{"ruleId":"32","severity":1,"message":"33","line":53,"column":13,"nodeType":"34","messageId":"35","endLine":53,"endColumn":21},"no-unused-vars","'loadTest' is assigned a value but never used.","Identifier","unusedVar"]